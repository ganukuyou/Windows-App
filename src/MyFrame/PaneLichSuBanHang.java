/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyFrame;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thanh Thu
 */
public final class PaneLichSuBanHang extends javax.swing.JPanel {

    /**
     * Creates new form PanelDanhMucSanPham
     */
    public PaneLichSuBanHang() throws ClassNotFoundException, SQLException {
        initComponents();
        LoadDBHomNay();
        LoadDBHomQua();
        LoadDBBayNgay();
        LoadDBThang();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        cmbLietKe = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLichSu = new javax.swing.JTable();

        jLabel9.setText("Liệt kê theo :");

        cmbLietKe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hôm nay", "Hôm qua", "7 ngày gần nhất", "1 tháng gần nhất" }));
        cmbLietKe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbLietKeItemStateChanged(evt);
            }
        });

        tblLichSu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên Nhân Viên", "Mã Model", "Seri Sản Phẩm", "Mã Hóa Đơn", "Tên Khách Hàng", "Ngày tháng", "Số Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLichSu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbLietKe, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbLietKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbLietKeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbLietKeItemStateChanged
        // TODO add your handling code here:
        LoadDBToJTable(cmbLietKe.getSelectedIndex());
    }//GEN-LAST:event_cmbLietKeItemStateChanged

    void LoadDBToJTable(int SelectedIndex)
    {
        DefaultTableModel tModel = (DefaultTableModel)tblLichSu.getModel();
        String c[] = {"Tên Nhân Viên", "Mã Model", "Seri Sản Phẩm", "Mã Hóa Đơn", "Tên Khách Hàng", "Ngày Tháng", "Giá Tiền"};
        switch(SelectedIndex)
        {
            case 0:
            {
                tModel.setDataVector(LichSuHomNayProfiles.getTable(), c);
                break;
            }
            case 1:
            {
                tModel.setDataVector(LichSuHomQuaProfiles.getTable(), c);
                break;
            }
            case 2:
            {
                tModel.setDataVector(LichSuBayNgayProfiles.getTable(), c);
                break;
            }
            default:
            {
                tModel.setDataVector(LichSuThangProfiles.getTable(), c);
                break;
            }
        }
    }
    
    
    void setVisibleAndLoadData(boolean b) throws ClassNotFoundException, SQLException
    {
        if(!b)
            return;
        this.setVisible(b);
        LoadDBHomNay();
        LoadDBHomQua();
        LoadDBBayNgay();
        LoadDBThang();
        LoadDBToJTable(cmbLietKe.getSelectedIndex());
    }
    
    String getQuery(String fromDate, String toDate)
    {
        String query = "Select nv.namenv, s.modelid, cthd.seri, hd.idhd, kh.namekh, hd.ngayxuat, s.gia from hoadon hd " +
                            "join nhanvien nv on hd.idnv = nv.idnv "
                            + "join khachhang kh on hd.idkh = kh.idkh "
                            + "join chitiethd cthd on hd.idhd = cthd.idhd "
                            + "join (Select chitiethd.idhd, modelid, dongho.seri, " 
                            + " gia from dongho join chitiethd on dongho.seri = "
                            + "chitiethd.seri) s on hd.idhd = s.idhd "
                            + "Where ngayxuat between '" + fromDate + "' And '" + toDate + "';";
        return query;
    }
    
    //Nhận dữ liệu lịch sử của hôm nay
    void LoadDBHomNay() throws ClassNotFoundException, SQLException
    {
        
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String currentDate = format.format(Calendar.getInstance().getTime());
        
        
        LichSuHomNayProfiles = new DataTable("localhost", "clock", 7, getQuery(currentDate, currentDate));
    }
    
    //Nhận dữ liệu lịch sử bán hàng của hôm qua
    void LoadDBHomQua() throws ClassNotFoundException, SQLException
    {
        
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Calendar d = Calendar.getInstance();
        d.add(Calendar.DAY_OF_WEEK, -1);
        String fromDate = format.format(d.getTime());
        String currentDate = format.format(Calendar.getInstance().getTime());
        
        LichSuHomQuaProfiles = new DataTable("localhost", "clock", 7, getQuery(fromDate, currentDate));
    }

    //Nhận dữ liệu lịch sử bán hàng bảy ngày gần đây
    void LoadDBBayNgay() throws ClassNotFoundException, SQLException
    {
        
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Calendar d = Calendar.getInstance();
        d.add(Calendar.DAY_OF_WEEK, -7);
        String fromDate = format.format(d.getTime());
        String currentDate = format.format(Calendar.getInstance().getTime());
        
        
        LichSuBayNgayProfiles = new DataTable("localhost", "clock", 7, getQuery(fromDate, currentDate));
    }
    
    //Nhận dữ liệu lịch sử bán hàng 1 tháng gần đây
    void LoadDBThang() throws ClassNotFoundException, SQLException
    {
        
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Calendar d = Calendar.getInstance();
        d.add(Calendar.MONTH, -1);
        String fromDate = format.format(d.getTime());
        String currentDate = format.format(Calendar.getInstance().getTime());
        
        
        LichSuThangProfiles = new DataTable("localhost", "clock", 7, getQuery(fromDate, currentDate));
    }
    
    DataTable LichSuHomNayProfiles;
    DataTable LichSuHomQuaProfiles;
    DataTable LichSuBayNgayProfiles;
    DataTable LichSuThangProfiles;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbLietKe;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLichSu;
    // End of variables declaration//GEN-END:variables
}
